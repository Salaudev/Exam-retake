{"ast":null,"code":"import { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\nconst initialState = {\n  news: [],\n  category: \"Uzbekistan\",\n  loading: false,\n  error: false\n};\n\nconst newsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case SET_ERROR:\n      return { ...state,\n        error: action.payload\n      };\n\n    case SET_NEWS:\n      return { ...state,\n        news: action.payload\n      };\n\n    case SET_CATEGORY:\n      return { ...state,\n        category: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;","map":{"version":3,"sources":["/home/salauat/Unicorn/ReactRetake/create/src/redux/reducers/newsReducer.js"],"names":["SET_CATEGORY","SET_ERROR","SET_LOADING","SET_NEWS","initialState","news","category","loading","error","newsReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,WAAlC,EAA+CC,QAA/C,QAA+D,UAA/D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,QAAQ,EAAE,YAFS;AAGnBC,EAAAA,OAAO,EAAE,KAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMC,WAAW,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYH,QAAAA,OAAO,EAAEI,MAAM,CAACE;AAA5B,OAAP;;AACF,SAAKZ,SAAL;AACE,aAAO,EAAE,GAAGS,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKV,QAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAAzB,OAAP;;AACF,SAAKb,YAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE;AAA7B,OAAP;;AAEF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\n\nconst initialState = {\n  news: [],\n  category: \"Uzbekistan\",\n  loading: false,\n  error: false,\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, loading: action.payload };\n    case SET_ERROR:\n      return { ...state, error: action.payload };\n    case SET_NEWS:\n      return { ...state, news: action.payload };\n    case SET_CATEGORY:\n      return { ...state, category: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;\n"]},"metadata":{},"sourceType":"module"}