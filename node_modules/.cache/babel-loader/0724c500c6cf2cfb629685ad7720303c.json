{"ast":null,"code":"var _jsxFileName = \"/home/salauat/Unicorn/ReactRetake/create/src/pages/News/index.js\",\n    _s = $RefreshSig$();\n\nimport { Container, Grid, Typography, Box, Skeleton } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { getNewsByCategory } from \"../../api\";\nimport Paper from \"@mui/material/Paper\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport dataCategories from \"./categories\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport PublicIcon from \"@mui/icons-material/Public\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function News() {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [category, setCategory] = useState(\"Uzbekistan\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  useEffect(async () => {\n    setLoading(true);\n    setError(false);\n    const obj = await getNewsByCategory(category);\n    if (obj.success) setData(obj.data);else setError(true);\n    setLoading(false);\n  }, [category]);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"start\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: 220,\n          overflow: \"hidden\",\n          mr: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: dataCategories.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n            disablePadding: true,\n            children: /*#__PURE__*/_jsxDEV(ListItemButton, {\n              onClick: () => setCategory(item.toLowerCase()),\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: /*#__PURE__*/_jsxDEV(PublicIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 4,\n          flex: 1\n        },\n        children: error ? /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error.main\",\n          children: \"Something went wrong\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: loading ? dataCategories.map((item, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            lg: 4,\n            children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"rectangular\",\n              width: \"100%\",\n              height: 300,\n              sx: {\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n              variant: \"text\",\n              height: 60,\n              sx: {\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this)) : data.map((obj, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            lg: 4,\n            sx: {\n              display: \"flex\",\n              flexDirection: \"column\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 2,\n                flex: 1\n              },\n              elevation: 10,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: obj.imageUrl,\n                alt: \"\",\n                style: {\n                  width: \"100%\",\n                  height: \"300px\",\n                  objectFit: \"cover\"\n                },\n                loading: \"lazy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                component: \"p\",\n                variant: \"body1\",\n                children: obj.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 23\n            }, this)\n          }, obj.url, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(News, \"ZamdPCZJp7fv1yMfbV8seUdtuP4=\");\n\n_c = News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/home/salauat/Unicorn/ReactRetake/create/src/pages/News/index.js"],"names":["Container","Grid","Typography","Box","Skeleton","useEffect","useState","getNewsByCategory","Paper","CircularProgress","dataCategories","List","ListItem","ListItemButton","ListItemIcon","ListItemText","PublicIcon","News","data","setData","category","setCategory","loading","setLoading","error","setError","obj","success","console","log","py","width","overflow","mr","map","item","toLowerCase","my","flex","index","borderRadius","display","flexDirection","p","imageUrl","height","objectFit","title","url"],"mappings":"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","sourcesContent":["import { Container, Grid, Typography, Box, Skeleton } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { getNewsByCategory } from \"../../api\";\nimport Paper from \"@mui/material/Paper\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\n\nimport dataCategories from \"./categories\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport PublicIcon from \"@mui/icons-material/Public\";\n\nexport default function News() {\n  const [data, setData] = useState([]);\n  const [category, setCategory] = useState(\"Uzbekistan\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(async () => {\n    setLoading(true);\n    setError(false);\n\n    const obj = await getNewsByCategory(category);\n    if (obj.success) setData(obj.data);\n    else setError(true);\n\n    setLoading(false);\n  }, [category]);\n\n  console.log(data);\n  return (\n    <Container maxWidth=\"xl\" sx={{ py: 3 }}>\n      <Box display={\"flex\"} alignItems=\"start\">\n        <Box sx={{ width: 220, overflow: \"hidden\", mr: 2 }}>\n          <List>\n            {dataCategories.map((item) => (\n              <ListItem key={item} disablePadding>\n                <ListItemButton onClick={() => setCategory(item.toLowerCase())}>\n                  <ListItemIcon>\n                    <PublicIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={item} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n        <Box sx={{ my: 4, flex: 1 }}>\n          {error ? (\n            <Typography color=\"error.main\">Something went wrong</Typography>\n          ) : (\n            <Grid container spacing={2}>\n              {loading\n                ? dataCategories.map((item, index) => (\n                    <Grid key={index} item xs={12} sm={6} lg={4}>\n                      <Skeleton\n                        variant=\"rectangular\"\n                        width={\"100%\"}\n                        height={300}\n                        sx={{ borderRadius: 2 }}\n                      />\n                      <Skeleton\n                        variant=\"text\"\n                        height={60}\n                        sx={{ borderRadius: 2 }}\n                      />\n                    </Grid>\n                  ))\n                : data.map((obj, index) => (\n                    <Grid\n                      key={obj.url}\n                      item\n                      xs={12}\n                      sm={6}\n                      lg={4}\n                      sx={{ display: \"flex\", flexDirection: \"column\" }}\n                    >\n                      <Paper\n                        sx={{\n                          p: 2,\n                          flex: 1,\n                        }}\n                        elevation={10}\n                      >\n                        <img\n                          src={obj.imageUrl}\n                          alt=\"\"\n                          style={{\n                            width: \"100%\",\n                            height: \"300px\",\n                            objectFit: \"cover\",\n                          }}\n                          loading=\"lazy\"\n                        />\n                        <Typography component={\"p\"} variant=\"body1\">\n                          {obj.title}\n                        </Typography>\n                      </Paper>\n                    </Grid>\n                  ))}\n            </Grid>\n          )}\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}