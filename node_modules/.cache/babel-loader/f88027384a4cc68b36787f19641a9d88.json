{"ast":null,"code":"import _asyncToGenerator from\"/home/salauat/Unicorn/ReactRetake/create/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/salauat/Unicorn/ReactRetake/create/node_modules/@babel/runtime/regenerator/index.js\";import{getNewsByCategory}from\"../../api\";import{dispatch}from\"../store\";import{SET_CATEGORY,SET_ERROR,SET_LOADING,SET_NEWS}from\"../types\";export var setLoading=function setLoading(state){dispatch({type:SET_LOADING,payload:state});};export var setError=function setError(state){dispatch({type:SET_ERROR,payload:state});};export var setNewsByCategory=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(category){var obj;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setLoading(true);setError(false);_context.next=4;return getNewsByCategory(category);case 4:obj=_context.sent;if(obj.success)dispatch({type:SET_NEWS,payload:obj.data});else setError(true);setLoading(false);case 7:case\"end\":return _context.stop();}}},_callee);}));return function setNewsByCategory(_x){return _ref.apply(this,arguments);};}();export var setCategory=function setCategory(category){dispatch({type:SET_CATEGORY,payload:category});};","map":{"version":3,"sources":["/home/salauat/Unicorn/ReactRetake/create/src/redux/actions/newsActions.js"],"names":["getNewsByCategory","dispatch","SET_CATEGORY","SET_ERROR","SET_LOADING","SET_NEWS","setLoading","state","type","payload","setError","setNewsByCategory","category","obj","success","data","setCategory"],"mappings":"+PAAA,OAASA,iBAAT,KAAkC,WAAlC,CACA,OAASC,QAAT,KAAyB,UAAzB,CACA,OAASC,YAAT,CAAuBC,SAAvB,CAAkCC,WAAlC,CAA+CC,QAA/C,KAA+D,UAA/D,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CACnCN,QAAQ,CAAC,CAAEO,IAAI,CAAEJ,WAAR,CAAqBK,OAAO,CAAEF,KAA9B,CAAD,CAAR,CACD,CAFM,CAIP,MAAO,IAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACH,KAAD,CAAW,CACjCN,QAAQ,CAAC,CAAEO,IAAI,CAAEL,SAAR,CAAmBM,OAAO,CAAEF,KAA5B,CAAD,CAAR,CACD,CAFM,CAIP,MAAO,IAAMI,CAAAA,iBAAiB,0FAAG,iBAAOC,QAAP,0HAC/BN,UAAU,CAAC,IAAD,CAAV,CACAI,QAAQ,CAAC,KAAD,CAAR,CAF+B,sBAIbV,CAAAA,iBAAiB,CAACY,QAAD,CAJJ,QAIzBC,GAJyB,eAK/B,GAAIA,GAAG,CAACC,OAAR,CAAiBb,QAAQ,CAAC,CAAEO,IAAI,CAAEH,QAAR,CAAkBI,OAAO,CAAEI,GAAG,CAACE,IAA/B,CAAD,CAAR,CAAjB,IACKL,CAAAA,QAAQ,CAAC,IAAD,CAAR,CAELJ,UAAU,CAAC,KAAD,CAAV,CAR+B,sDAAH,kBAAjBK,CAAAA,iBAAiB,4CAAvB,CAWP,MAAO,IAAMK,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACJ,QAAD,CAAc,CACvCX,QAAQ,CAAC,CAAEO,IAAI,CAAEN,YAAR,CAAsBO,OAAO,CAAEG,QAA/B,CAAD,CAAR,CACD,CAFM","sourcesContent":["import { getNewsByCategory } from \"../../api\";\nimport { dispatch } from \"../store\";\nimport { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\n\nexport const setLoading = (state) => {\n  dispatch({ type: SET_LOADING, payload: state });\n};\n\nexport const setError = (state) => {\n  dispatch({ type: SET_ERROR, payload: state });\n};\n\nexport const setNewsByCategory = async (category) => {\n  setLoading(true);\n  setError(false);\n\n  const obj = await getNewsByCategory(category);\n  if (obj.success) dispatch({ type: SET_NEWS, payload: obj.data });\n  else setError(true);\n\n  setLoading(false);\n};\n\nexport const setCategory = (category) => {\n  dispatch({ type: SET_CATEGORY, payload: category });\n};\n"]},"metadata":{},"sourceType":"module"}