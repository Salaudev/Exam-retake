{"ast":null,"code":"import { getNewsByCategory } from \"../../api\";\nimport { dispatch } from \"../store\";\nimport { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\nexport const setLoading = state => {\n  dispatch({\n    type: SET_LOADING,\n    payload: state\n  });\n};\nexport const setError = state => {\n  dispatch({\n    type: SET_ERROR,\n    payload: state\n  });\n};\nexport const setNewsByCategory = async category => {\n  setLoading(true);\n  setError(false);\n  const obj = await getNewsByCategory(category);\n  if (obj.success) dispatch({\n    type: SET_NEWS,\n    payload: obj.data\n  });else setError(true);\n  setLoading(false);\n};\nexport const setCategory = category => {\n  dispatch({\n    type: SET_CATEGORY,\n    payload: category\n  });\n};","map":{"version":3,"sources":["/home/salauat/Unicorn/ReactRetake/create/src/redux/actions/newsActions.js"],"names":["getNewsByCategory","dispatch","SET_CATEGORY","SET_ERROR","SET_LOADING","SET_NEWS","setLoading","state","type","payload","setError","setNewsByCategory","category","obj","success","data","setCategory"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,WAAlC;AACA,SAASC,QAAT,QAAyB,UAAzB;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,WAAlC,EAA+CC,QAA/C,QAA+D,UAA/D;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACnCN,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEJ,WAAR;AAAqBK,IAAAA,OAAO,EAAEF;AAA9B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMG,QAAQ,GAAIH,KAAD,IAAW;AACjCN,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEL,SAAR;AAAmBM,IAAAA,OAAO,EAAEF;AAA5B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMI,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;AACnDN,EAAAA,UAAU,CAAC,IAAD,CAAV;AACAI,EAAAA,QAAQ,CAAC,KAAD,CAAR;AAEA,QAAMG,GAAG,GAAG,MAAMb,iBAAiB,CAACY,QAAD,CAAnC;AACA,MAAIC,GAAG,CAACC,OAAR,EAAiBb,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEH,QAAR;AAAkBI,IAAAA,OAAO,EAAEI,GAAG,CAACE;AAA/B,GAAD,CAAR,CAAjB,KACKL,QAAQ,CAAC,IAAD,CAAR;AAELJ,EAAAA,UAAU,CAAC,KAAD,CAAV;AACD,CATM;AAWP,OAAO,MAAMU,WAAW,GAAIJ,QAAD,IAAc;AACvCX,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEN,YAAR;AAAsBO,IAAAA,OAAO,EAAEG;AAA/B,GAAD,CAAR;AACD,CAFM","sourcesContent":["import { getNewsByCategory } from \"../../api\";\nimport { dispatch } from \"../store\";\nimport { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\n\nexport const setLoading = (state) => {\n  dispatch({ type: SET_LOADING, payload: state });\n};\n\nexport const setError = (state) => {\n  dispatch({ type: SET_ERROR, payload: state });\n};\n\nexport const setNewsByCategory = async (category) => {\n  setLoading(true);\n  setError(false);\n\n  const obj = await getNewsByCategory(category);\n  if (obj.success) dispatch({ type: SET_NEWS, payload: obj.data });\n  else setError(true);\n\n  setLoading(false);\n};\n\nexport const setCategory = (category) => {\n  dispatch({ type: SET_CATEGORY, payload: category });\n};\n"]},"metadata":{},"sourceType":"module"}