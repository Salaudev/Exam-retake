{"ast":null,"code":"import _objectSpread from\"/home/salauat/Unicorn/ReactRetake/create/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{SET_CATEGORY,SET_ERROR,SET_LOADING,SET_NEWS}from\"../types\";var initialState={news:[],category:\"Uzbekistan\",loading:false,error:false};var newsReducer=function newsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_LOADING:return _objectSpread(_objectSpread({},state),{},{loading:action.payload});case SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload});case SET_NEWS:return _objectSpread(_objectSpread({},state),{},{news:action.payload});case SET_CATEGORY:return _objectSpread(_objectSpread({},state),{},{category:action.payload});default:return state;}};export default newsReducer;","map":{"version":3,"sources":["/home/salauat/Unicorn/ReactRetake/create/src/redux/reducers/newsReducer.js"],"names":["SET_CATEGORY","SET_ERROR","SET_LOADING","SET_NEWS","initialState","news","category","loading","error","newsReducer","state","action","type","payload"],"mappings":"6HAAA,OAASA,YAAT,CAAuBC,SAAvB,CAAkCC,WAAlC,CAA+CC,QAA/C,KAA+D,UAA/D,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBC,QAAQ,CAAE,YAFS,CAGnBC,OAAO,CAAE,KAHU,CAInBC,KAAK,CAAE,KAJY,CAArB,CAOA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CACpD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,WAAL,CACE,sCAAYQ,KAAZ,MAAmBH,OAAO,CAAEI,MAAM,CAACE,OAAnC,GACF,IAAKZ,CAAAA,SAAL,CACE,sCAAYS,KAAZ,MAAmBF,KAAK,CAAEG,MAAM,CAACE,OAAjC,GACF,IAAKV,CAAAA,QAAL,CACE,sCAAYO,KAAZ,MAAmBL,IAAI,CAAEM,MAAM,CAACE,OAAhC,GACF,IAAKb,CAAAA,YAAL,CACE,sCAAYU,KAAZ,MAAmBJ,QAAQ,CAAEK,MAAM,CAACE,OAApC,GAEF,QACE,MAAOH,CAAAA,KAAP,CAXJ,CAaD,CAdD,CAgBA,cAAeD,CAAAA,WAAf","sourcesContent":["import { SET_CATEGORY, SET_ERROR, SET_LOADING, SET_NEWS } from \"../types\";\n\nconst initialState = {\n  news: [],\n  category: \"Uzbekistan\",\n  loading: false,\n  error: false,\n};\n\nconst newsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_LOADING:\n      return { ...state, loading: action.payload };\n    case SET_ERROR:\n      return { ...state, error: action.payload };\n    case SET_NEWS:\n      return { ...state, news: action.payload };\n    case SET_CATEGORY:\n      return { ...state, category: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default newsReducer;\n"]},"metadata":{},"sourceType":"module"}